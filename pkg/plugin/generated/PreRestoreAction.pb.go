// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PreRestoreAction.proto

package generated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PreRestoreActionExecuteRequest struct {
	Plugin  string `protobuf:"bytes,1,opt,name=plugin" json:"plugin,omitempty"`
	Restore []byte `protobuf:"bytes,2,opt,name=restore,proto3" json:"restore,omitempty"`
}

func (m *PreRestoreActionExecuteRequest) Reset()                    { *m = PreRestoreActionExecuteRequest{} }
func (m *PreRestoreActionExecuteRequest) String() string            { return proto.CompactTextString(m) }
func (*PreRestoreActionExecuteRequest) ProtoMessage()               {}
func (*PreRestoreActionExecuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *PreRestoreActionExecuteRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *PreRestoreActionExecuteRequest) GetRestore() []byte {
	if m != nil {
		return m.Restore
	}
	return nil
}

func init() {
	proto.RegisterType((*PreRestoreActionExecuteRequest)(nil), "generated.PreRestoreActionExecuteRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PreRestoreAction service

type PreRestoreActionClient interface {
	Execute(ctx context.Context, in *PreRestoreActionExecuteRequest, opts ...grpc.CallOption) (*Empty, error)
}

type preRestoreActionClient struct {
	cc *grpc.ClientConn
}

func NewPreRestoreActionClient(cc *grpc.ClientConn) PreRestoreActionClient {
	return &preRestoreActionClient{cc}
}

func (c *preRestoreActionClient) Execute(ctx context.Context, in *PreRestoreActionExecuteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/generated.PreRestoreAction/Execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PreRestoreAction service

type PreRestoreActionServer interface {
	Execute(context.Context, *PreRestoreActionExecuteRequest) (*Empty, error)
}

func RegisterPreRestoreActionServer(s *grpc.Server, srv PreRestoreActionServer) {
	s.RegisterService(&_PreRestoreAction_serviceDesc, srv)
}

func _PreRestoreAction_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreRestoreActionExecuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreRestoreActionServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.PreRestoreAction/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreRestoreActionServer).Execute(ctx, req.(*PreRestoreActionExecuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PreRestoreAction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "generated.PreRestoreAction",
	HandlerType: (*PreRestoreActionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _PreRestoreAction_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "PreRestoreAction.proto",
}

func init() { proto.RegisterFile("PreRestoreAction.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x0b, 0x28, 0x4a, 0x0d,
	0x4a, 0x2d, 0x2e, 0xc9, 0x2f, 0x4a, 0x75, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0x4f, 0xcd, 0x4b, 0x2d, 0x4a, 0x2c, 0x49, 0x4d, 0x91, 0xe2, 0x09,
	0xce, 0x48, 0x2c, 0x4a, 0x4d, 0x81, 0x48, 0x28, 0x05, 0x71, 0xc9, 0xa1, 0x6b, 0x71, 0xad, 0x48,
	0x4d, 0x2e, 0x2d, 0x49, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe3, 0x62, 0x2b,
	0xc8, 0x29, 0x4d, 0xcf, 0xcc, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x84, 0x24,
	0xb8, 0xd8, 0x8b, 0x20, 0xda, 0x24, 0x98, 0x14, 0x18, 0x35, 0x78, 0x82, 0x60, 0x5c, 0xa3, 0x28,
	0x2e, 0x01, 0x74, 0x33, 0x85, 0xdc, 0xb8, 0xd8, 0xa1, 0xe6, 0x0a, 0x69, 0xea, 0xc1, 0x1d, 0xa3,
	0x87, 0xdf, 0x6e, 0x29, 0x01, 0x24, 0xa5, 0xae, 0xb9, 0x05, 0x25, 0x95, 0x49, 0x6c, 0x60, 0x67,
	0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd2, 0xd1, 0xbb, 0x98, 0xe9, 0x00, 0x00, 0x00,
}
