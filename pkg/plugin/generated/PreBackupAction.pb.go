// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PreBackupAction.proto

package generated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PreBackupActionExecuteRequest struct {
	Plugin string `protobuf:"bytes,1,opt,name=plugin" json:"plugin,omitempty"`
	Backup []byte `protobuf:"bytes,2,opt,name=backup,proto3" json:"backup,omitempty"`
}

func (m *PreBackupActionExecuteRequest) Reset()                    { *m = PreBackupActionExecuteRequest{} }
func (m *PreBackupActionExecuteRequest) String() string            { return proto.CompactTextString(m) }
func (*PreBackupActionExecuteRequest) ProtoMessage()               {}
func (*PreBackupActionExecuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *PreBackupActionExecuteRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *PreBackupActionExecuteRequest) GetBackup() []byte {
	if m != nil {
		return m.Backup
	}
	return nil
}

func init() {
	proto.RegisterType((*PreBackupActionExecuteRequest)(nil), "generated.PreBackupActionExecuteRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PreBackupAction service

type PreBackupActionClient interface {
	Execute(ctx context.Context, in *PreBackupActionExecuteRequest, opts ...grpc.CallOption) (*Empty, error)
}

type preBackupActionClient struct {
	cc *grpc.ClientConn
}

func NewPreBackupActionClient(cc *grpc.ClientConn) PreBackupActionClient {
	return &preBackupActionClient{cc}
}

func (c *preBackupActionClient) Execute(ctx context.Context, in *PreBackupActionExecuteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/generated.PreBackupAction/Execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PreBackupAction service

type PreBackupActionServer interface {
	Execute(context.Context, *PreBackupActionExecuteRequest) (*Empty, error)
}

func RegisterPreBackupActionServer(s *grpc.Server, srv PreBackupActionServer) {
	s.RegisterService(&_PreBackupAction_serviceDesc, srv)
}

func _PreBackupAction_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreBackupActionExecuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreBackupActionServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.PreBackupAction/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreBackupActionServer).Execute(ctx, req.(*PreBackupActionExecuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PreBackupAction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "generated.PreBackupAction",
	HandlerType: (*PreBackupActionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _PreBackupAction_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "PreBackupAction.proto",
}

func init() { proto.RegisterFile("PreBackupAction.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x0d, 0x28, 0x4a, 0x75,
	0x4a, 0x4c, 0xce, 0x2e, 0x2d, 0x70, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x4c, 0x4f, 0xcd, 0x4b, 0x2d, 0x4a, 0x2c, 0x49, 0x4d, 0x91, 0xe2, 0x09, 0xce,
	0x48, 0x2c, 0x4a, 0x4d, 0x81, 0x48, 0x28, 0xf9, 0x73, 0xc9, 0xa2, 0xe9, 0x70, 0xad, 0x48, 0x4d,
	0x2e, 0x2d, 0x49, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe3, 0x62, 0x2b, 0xc8,
	0x29, 0x4d, 0xcf, 0xcc, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x40, 0xe2, 0x49,
	0x60, 0x5d, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x50, 0x9e, 0x51, 0x04, 0x17, 0x3f, 0x9a,
	0x81, 0x42, 0xae, 0x5c, 0xec, 0x50, 0x43, 0x85, 0x34, 0xf4, 0xe0, 0x0e, 0xd1, 0xc3, 0x6b, 0xaf,
	0x94, 0x00, 0x92, 0x4a, 0xd7, 0xdc, 0x82, 0x92, 0xca, 0x24, 0x36, 0xb0, 0x8b, 0x8d, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x8e, 0x6e, 0x79, 0x99, 0xe3, 0x00, 0x00, 0x00,
}
