// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PostBackupAction.proto

package generated

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PostBackupActionExecuteRequest struct {
	Plugin string `protobuf:"bytes,1,opt,name=plugin" json:"plugin,omitempty"`
	Backup []byte `protobuf:"bytes,2,opt,name=backup,proto3" json:"backup,omitempty"`
}

func (m *PostBackupActionExecuteRequest) Reset()                    { *m = PostBackupActionExecuteRequest{} }
func (m *PostBackupActionExecuteRequest) String() string            { return proto.CompactTextString(m) }
func (*PostBackupActionExecuteRequest) ProtoMessage()               {}
func (*PostBackupActionExecuteRequest) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *PostBackupActionExecuteRequest) GetPlugin() string {
	if m != nil {
		return m.Plugin
	}
	return ""
}

func (m *PostBackupActionExecuteRequest) GetBackup() []byte {
	if m != nil {
		return m.Backup
	}
	return nil
}

func init() {
	proto.RegisterType((*PostBackupActionExecuteRequest)(nil), "generated.PostBackupActionExecuteRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PostBackupAction service

type PostBackupActionClient interface {
	Execute(ctx context.Context, in *PostBackupActionExecuteRequest, opts ...grpc.CallOption) (*Empty, error)
}

type postBackupActionClient struct {
	cc *grpc.ClientConn
}

func NewPostBackupActionClient(cc *grpc.ClientConn) PostBackupActionClient {
	return &postBackupActionClient{cc}
}

func (c *postBackupActionClient) Execute(ctx context.Context, in *PostBackupActionExecuteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/generated.PostBackupAction/Execute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PostBackupAction service

type PostBackupActionServer interface {
	Execute(context.Context, *PostBackupActionExecuteRequest) (*Empty, error)
}

func RegisterPostBackupActionServer(s *grpc.Server, srv PostBackupActionServer) {
	s.RegisterService(&_PostBackupAction_serviceDesc, srv)
}

func _PostBackupAction_Execute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostBackupActionExecuteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostBackupActionServer).Execute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/generated.PostBackupAction/Execute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostBackupActionServer).Execute(ctx, req.(*PostBackupActionExecuteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PostBackupAction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "generated.PostBackupAction",
	HandlerType: (*PostBackupActionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Execute",
			Handler:    _PostBackupAction_Execute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "PostBackupAction.proto",
}

func init() { proto.RegisterFile("PostBackupAction.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x0b, 0xc8, 0x2f, 0x2e,
	0x71, 0x4a, 0x4c, 0xce, 0x2e, 0x2d, 0x70, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0x4f, 0xcd, 0x4b, 0x2d, 0x4a, 0x2c, 0x49, 0x4d, 0x91, 0xe2, 0x09,
	0xce, 0x48, 0x2c, 0x4a, 0x4d, 0x81, 0x48, 0x28, 0x05, 0x70, 0xc9, 0xa1, 0x6b, 0x71, 0xad, 0x48,
	0x4d, 0x2e, 0x2d, 0x49, 0x0d, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe3, 0x62, 0x2b,
	0xc8, 0x29, 0x4d, 0xcf, 0xcc, 0x93, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf2, 0x40, 0xe2,
	0x49, 0x60, 0x5d, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x3c, 0x41, 0x50, 0x9e, 0x51, 0x14, 0x97, 0x00,
	0xba, 0x89, 0x42, 0x6e, 0x5c, 0xec, 0x50, 0x53, 0x85, 0x34, 0xf5, 0xe0, 0x4e, 0xd1, 0xc3, 0x6f,
	0xb3, 0x94, 0x00, 0x92, 0x52, 0xd7, 0xdc, 0x82, 0x92, 0xca, 0x24, 0x36, 0xb0, 0xa3, 0x8d, 0x01,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x3a, 0xbe, 0x67, 0x07, 0xe7, 0x00, 0x00, 0x00,
}
